// <auto-generated />
using EfcDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfcDataAccess.Migrations
{
    [DbContext(typeof(EfcRedditContext))]
    [Migration("20231107084936_SecondCreation")]
    partial class SecondCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Shared.DTOs.User.OwnerDto", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("OwnerDto");
                });

            modelBuilder.Entity("Shared.Models.RedditPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.HasIndex("Username1");

                    b.ToTable("RedditPosts");
                });

            modelBuilder.Entity("Shared.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shared.Models.RedditPost", b =>
                {
                    b.HasOne("Shared.Models.User", null)
                        .WithMany("RedditPosts")
                        .HasForeignKey("Username");

                    b.HasOne("Shared.DTOs.User.OwnerDto", "User")
                        .WithMany()
                        .HasForeignKey("Username1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shared.Models.User", b =>
                {
                    b.Navigation("RedditPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
